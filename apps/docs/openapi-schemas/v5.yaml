---
openapi: 3.1.0
info:
  title: Whop Apps API
  description: The Whop Apps API
  version: v5
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.whop.com/api
paths:
  "/v5/app/activity_feed_items":
    post:
      summary: Create an Activity Feed Item
      tags:
      - app/activity_feed_items
      security:
      - AppToken: []
      description: Create an activity feed object (aka a post)
      operationId: post_api_v5_app_activity_feed_items
      parameters: []
      responses:
        '201':
          description: activity feed item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_feed_item_id:
                    type: string
                    description: The ID of the activity feed item, which will look
                      like afi_*************
                required:
                - activity_feed_item_id
        '400':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experience_id:
                  type: string
                  description: The ID of the experience, which will look like exp_*************
                user_id:
                  type: string
                  description: The ID of the user, which will look like user_*************
                external_id:
                  type: string
                  description: The ID of the external object that this maps to, like
                    a feed post
                link:
                  type: string
                  description: The link that this feed post should open when clicked
                rest_path:
                  type: string
                  description: The relative path the user should be redirected to
                    in the app
                blocks:
                  type: array
                  description: The blocks of the post
                  items:
                    type: object
                    properties:
                      block_type:
                        type: string
                        description: The type of the block
                      text_content:
                        type: string
                        description: The textual content of the block, if applicable
                      metadata:
                        type: object
                        description: Any additional metadata associated with the block
                    required:
                    - block_type
              required:
              - experience_id
              - user_id
              - external_id
              - blocks
  "/v5/app/activity_feed_items/{external_id}":
    patch:
      summary: Update an Activity Feed Item
      tags:
      - app/activity_feed_items
      security:
      - AppToken: []
      description: Update an activity feed object
      operationId: update_api_v5_app_activity_feed_item
      parameters:
      - name: external_id
        in: path
        required: true
        description: The external ID of the activity feed item
        schema:
          type: string
      responses:
        '200':
          description: activity feed item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity_feed_item_id:
                    type: string
                    description: The ID of the activity feed item, which will look
                      like afi_*************
                required:
                - activity_feed_item_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  format: uri
                  description: The link that this feed post should open when clicked
                rest_path:
                  type: string
                  description: The relative path the user should be redirected to
                    in the app
                blocks:
                  type: array
                  description: The blocks of the post
                  items:
                    type: object
                    properties:
                      block_type:
                        type: string
                        description: The type of the block
                      text_content:
                        type: string
                        description: The textual content of the block, if applicable
                      metadata:
                        type: object
                        description: Any additional metadata associated with the block
                    required:
                    - block_type
    delete:
      summary: Delete an Activity Feed Item
      tags:
      - app/activity_feed_items
      security:
      - AppToken: []
      description: Deletes an Activity Feed Item
      operationId: delete_api_v5_app_activity_feed_item
      parameters:
      - name: external_id
        in: path
        required: true
        description: The external ID of the activity feed item
        schema:
          type: string
      responses:
        '204':
          description: activity feed item deleted
        '404':
          description: activity feed item not found
  "/v5/app/app_connections":
    get:
      summary: List App Connections
      tags:
      - app/app_connections
      security:
      - AppToken: []
      description: Returns a collection of app connections
      operationId: get_api_v5_app_app_connections
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: resource_id
        in: query
        required: false
        description: An ID of an object to filter by, which will look like prod_*************
        schema:
          type: string
      - name: resource_type
        in: query
        schema:
          type: string
          enum:
          - product
        required: false
        description: The type of resource to filter by, ex 'product'.
      responses:
        '200':
          description: app connections retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppAppConnection"
                required:
                - pagination
                - data
    post:
      summary: Create an App Connection
      tags:
      - app/app_connections
      security:
      - AppToken: []
      description: Create an app connection for an object
      operationId: post_api_v5_app_app_connections
      parameters: []
      responses:
        '201':
          description: app connection created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppAppConnection"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resource_id:
                  type: string
                  description: The ID of the polymorphic resource for the connection.
                    Ex. a product ID like prod_*************.
                resource_type:
                  type: string
                  description: The type of the polymorphic resource for the connection.
                    Ex. 'product'
                  enum:
                  - product
                view_type:
                  type: string
                  description: The type of view for the connection.
                  enum:
                  - customer_before_checkout_view
              required:
              - resource_id
              - resource_type
              - view_type
  "/v5/app/app_connections/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the app connection, which will look like apco_*************
      schema:
        type: string
    get:
      summary: Retrieve an app connection
      tags:
      - app/app_connections
      security:
      - AppToken: []
      description: Returns an app connection
      operationId: get_api_v5_app_app_connections_id
      responses:
        '200':
          description: app connection found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppAppConnection"
    delete:
      summary: Delete an App Connection
      tags:
      - app/app_connections
      security:
      - AppToken: []
      description: Deletes an App Connection
      operationId: delete_api_v5_app_app_connections_id
      responses:
        '204':
          description: app connection deleted
  "/v5/app":
    get:
      summary: Retrieve the current app
      tags:
      - app
      security:
      - AppToken: []
      description: Returns an App
      operationId: get_api_v5_app
      parameters:
      - name: x-whop-impersonate-app
        in: header
        required: false
        schema:
          type: string
          description: The tag of the component app to impersonate
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppApp"
        '403':
          description: Forbidden
          "$ref": "#/components/responses/Forbidden"
  "/v5/app/authorized_users":
    get:
      summary: List Authorized Users
      tags:
      - app/authorized_users
      security:
      - AppToken: []
      description: Returns a collection of Authorized Users
      operationId: get_api_v5_app_authorized_users
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: role
        in: query
        required: false
        description: A role to filter by.
        schema:
          type: string
          enum:
          - owner
          - admin
          - moderator
          - app_manager
          - sales_manager
      - name: search
        in: query
        required: false
        description: A search to filter by. This will search the authorized users'
          name and username.
        schema:
          type: string
      responses:
        '200':
          description: authorized users retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppAuthorizedUser"
                required:
                - pagination
                - data
  "/v5/app/authorized_users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the AuthorizedUser, which will look like ausr_*************.
      schema:
        type: string
    get:
      summary: Retrieve an Authorized User
      tags:
      - app/authorized_users
      security:
      - AppToken: []
      description: Returns an Authorized User
      operationId: get_api_v5_app_authorized_users_id
      responses:
        '200':
          description: authorized user found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppAuthorizedUser"
        '404':
          description: not found
          "$ref": "#/components/responses/NotFound"
  "/v5/app/companies":
    get:
      summary: List Companies
      tags:
      - app/companies
      security:
      - AppToken: []
      description: Returns a collection of companies
      operationId: get_api_v5_app_companies
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppCompany"
                required:
                - pagination
                - data
  "/v5/app/companies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Company, which will look like biz_*************
      schema:
        type: string
    get:
      summary: Retrieve a Company
      tags:
      - app/companies
      security:
      - AppToken: []
      description: Returns a company
      operationId: get_api_v5_app_companies_id
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppCompany"
        '404':
          description: Not found
          "$ref": "#/components/responses/NotFound"
  "/v5/app/experiences":
    get:
      summary: List Experiences
      tags:
      - app/experiences
      security:
      - AppToken: []
      description: Returns a collection of experiences
      operationId: get_api_v5_app_experiences
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppExperience"
                required:
                - pagination
                - data
  "/v5/app/experiences/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Experience, which will look like exp_*************
      schema:
        type: string
    get:
      summary: Retrieve an Experience
      tags:
      - app/experiences
      security:
      - AppToken: []
      description: Returns an experience
      operationId: get_api_v5_app_experiences_id
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppExperience"
        '404':
          description: Not found
          "$ref": "#/components/responses/NotFound"
    patch:
      summary: Update an Experience
      tags:
      - app/experiences
      security:
      - AppToken: []
      description: Updates an experience
      operationId: patch_api_v5_app_experiences_id
      parameters: []
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppExperience"
        '400':
          description: Invalid request
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  description: The metadata of the experience
              required:
              - metadata
  "/v5/app/feed_content_items":
    post:
      summary: Create a Feed Content Item
      tags:
      - app/feed_content_items
      security:
      - AppToken: []
      description: Create a Feed Content Item
      operationId: post_api_v5_app_feed_content_items
      parameters: []
      responses:
        '201':
          description: feed content item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  feed_content_item_id:
                    type: string
                    description: The ID of the feed content item, which will look
                      like fci_*************
                required:
                - feed_content_item_id
        '400':
          description: invalid request
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experience_id:
                  type: string
                  description: The ID of the experience, which will look like exp_*************
                user_id:
                  type: string
                  description: The ID of the user, which will look like user_*************
                external_id:
                  type: string
                  description: The ID of the external object that this maps to, like
                    a feed post
                parent_external_id:
                  type: string
                  description: The ID of the parent external object that this maps
                    to, like a feed post
                rest_path:
                  type: string
                  description: The relative path the user should be redirected to
                    in the app
                event_type:
                  type: string
                  description: The type of event that this feed post is associated
                    with.
                metadata:
                  type: object
                  description: A metadata object that can accept any properties. All
                    metadata must include a 'title' property that is a String value.
                  additionalProperties: true
                file_attachments:
                  type: array
                  description: The file attachments of the feed content item. This
                    can be videos, images, or files.
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                        - image
                        - video
                        - file
                        description: The type of the file
                      file_url:
                        type: string
                        description: The url of the file
                    required:
                    - type
                    - file_url
                gifs:
                  type: array
                  description: Any gifs attached to the feed content item.
                  items:
                    type: object
                    properties:
                      height:
                        type: number
                        description: The height of the gif
                      width:
                        type: number
                        description: The width of the gif
                      original_url:
                        type: string
                        description: The original url of the gif
                      preview_url:
                        type: string
                        description: The preview url of the gif
                      url:
                        type: string
                        description: The url of the gif
                      slug:
                        type: string
                        description: The slug of the gif
                      title:
                        type: string
                        description: The title of the gif
                      provider:
                        type: string
                        description: The provider of the gif
                    required:
                    - height
                    - width
                    - original_url
                    - preview_url
                    - url
                    - slug
                    - title
                    - provider
              required:
              - experience_id
              - external_id
              - metadata
              - event_type
  "/v5/app/feed_content_items/{external_id}":
    parameters:
    - name: external_id
      in: path
      required: true
      description: The external ID of the feed content item
      schema:
        type: string
    delete:
      summary: Delete a Feed Content Item
      tags:
      - app/feed_content_items
      security:
      - AppToken: []
      description: Deletes a Feed Content Item
      operationId: delete_api_v5_app_feed_content_item
      responses:
        '204':
          description: feed content item deleted
  "/v5/app/inbound_webhook_filters":
    get:
      summary: List Inbound Webhooks Filters
      tags:
      - app/inbound_webhook_filters
      security:
      - AppToken: []
      description: Returns a collection of inbound webhook filters
      operationId: get_api_v5_app_inbound_webhook_filters
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to return
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: webhook filters retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppInboundWebhookFilter"
                required:
                - pagination
                - data
    post:
      summary: Creates a Inbound Webhook Filter
      tags:
      - app/inbound_webhook_filters
      security:
      - AppToken: []
      description: Create an Inbound Webhook Filter
      operationId: post_api_v5_app_inbound_webhook_filters
      parameters: []
      responses:
        '200':
          description: webhook filter created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: object
                  description: The filters of the inbound webhook
                experience_id:
                  type: string
                  description: The ID of the experience, which will look like exp_*************
              required:
              - experience_id
              - filters
  "/v5/app/inbound_webhook_filters/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Inbound Webhook Filter, which will look like inwf_************
      schema:
        type: string
    get:
      summary: Retrieve an Inbound Webhook Filter
      tags:
      - app/inbound_webhook_filters
      security:
      - AppToken: []
      description: Returns an inbound webhook filter
      operationId: get_api_v5_app_inbound_webhook_filters_id
      responses:
        '200':
          description: webhook filter found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppInboundWebhookFilter"
  "/v5/app/inbound_webhook_filters/fetch_for_experience/{experience_id}":
    parameters:
    - name: experience_id
      in: path
      required: true
      description: The ID of the experience, which will look like exp_************
      schema:
        type: string
    get:
      summary: Retrieve an Experience's Inbound Webhook Filters
      tags:
      - app/inbound_webhook_filters
      security:
      - AppToken: []
      description: Returns an inbound webhook filter
      operationId: get_api_v5_app_inbound_webhook_filters_fetch_for_experience
      responses:
        '200':
          description: webhook filter found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppInboundWebhookFilter"
  "/v5/app/inbound_webhooks":
    get:
      summary: List Inbound Webhooks
      tags:
      - app/inbound_webhooks
      security:
      - AppToken: []
      description: Returns a collection of inbound webhooks
      operationId: get_api_v5_app_inbound_webhooks
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      - name: experience_id
        in: query
        required: false
        description: The ID of an experience to filter by, which will look like exp_*************
        schema:
          type: string
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppInboundWebhook"
                required:
                - pagination
                - data
    post:
      summary: Create a Inbound Webhook
      tags:
      - app/inbound_webhooks
      security:
      - AppToken: []
      description: Create a Inbound Webhook
      operationId: post_api_v5_app_inbound_webhooks
      parameters: []
      responses:
        '201':
          description: A successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppInboundWebhook"
        '400':
          description: Invalid request
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter_values:
                  type: object
                  description: The filter values of the inbound webhook
                discord_embed:
                  type: object
                  description: The discord embed of the inbound webhook
                idempotent_key:
                  type: string
                  description: The idempotent key of the inbound webhook
                timestamp:
                  type: string
                  description: 'The timestamp of the inbound webhook in ISO8601 format.
                    Example: 2021-01-01T00:00:00Z'
              required:
              - filter_values
              - discord_embed
              - timestamp
  "/v5/app/last_activity":
    post:
      summary: Create a last activity
      tags:
      - app/last_activity
      security:
      - AppToken: []
      description: Create a last activity cache and update this experience's last
        activity timestamp
      operationId: post_api_v5_app_last_activity
      parameters: []
      responses:
        '204':
          description: A successful response
        '400':
          description: Invalid request
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                experience_id:
                  type: string
                  description: The ID of the experience, which will look like exp_*************
                user_id:
                  type: string
                  description: The ID of the user, which will look like user_*************
                data:
                  type: object
                  description: A data object that can accept any properties.
                  additionalProperties: true
                update_last_activity_at:
                  type: boolean
                  description: Whether or not to update the last_activity_at timestamp
                    of the experience
              required:
              - experience_id
              - data
  "/v5/app/line_items":
    get:
      summary: List Line Items
      tags:
      - app/line_items
      security:
      - AppToken: []
      description: Returns a collection of line items
      operationId: get_api_v5_app_line_items
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      responses:
        '200':
          description: line items retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppLineItem"
                required:
                - pagination
                - data
    post:
      summary: Create a Line Item
      tags:
      - app/line_items
      security:
      - AppToken: []
      description: Create a line item for a company
      operationId: post_api_v5_app_line_items
      parameters: []
      responses:
        '201':
          description: line item created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppLineItem"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company_id:
                  type: string
                  description: The ID of the company to create the line item for,
                    which will look like biz_*************
                amount:
                  type: number
                  description: The amount (price) for the line item.
                base_currency:
                  type: string
                  enum:
                  - usd
                  - sgd
                  - inr
                  - aud
                  - brl
                  - cad
                  - dkk
                  - eur
                  - nok
                  - gbp
                  - sek
                  - chf
                  - hkd
                  - huf
                  - jpy
                  - mxn
                  - myr
                  - pln
                  - czk
                  - nzd
                  - aed
                  - eth
                  - ape
                  - cop
                  - ron
                  - thb
                  - bgn
                  - idr
                  - dop
                  - php
                  - try
                  - krw
                  - twd
                  - vnd
                  - pkr
                  - clp
                  - uyu
                  - ars
                  - zar
                  - dzd
                  - tnd
                  - mad
                  - kes
                  - kwd
                  - jod
                  - all
                  - xcd
                  - amd
                  - bsd
                  - bhd
                  - bob
                  - bam
                  - khr
                  - crc
                  - xof
                  - egp
                  - etb
                  - gmd
                  - ghs
                  - gtq
                  - gyd
                  - ils
                  - jmd
                  - mop
                  - mga
                  - mur
                  - mdl
                  - mnt
                  - nad
                  - ngn
                  - mkd
                  - omr
                  - pyg
                  - pen
                  - qar
                  - rwf
                  - sar
                  - rsd
                  - lkr
                  - tzs
                  - ttd
                  - uzs
                  - rub
                  description: A three letter currency code for the line item.
                name:
                  type: string
                  description: The name of the line item.
                description:
                  type: string
                  description: A textual description for the line item.
                allow_multiple_quantity:
                  type: boolean
                  description: Whether or not the line item can be purchased as multiple
                    quantity.
                metadata:
                  type: object
                  description: A JSON object containing any additional metadata for
                    the line item.
              required:
              - company_id
              - amount
              - base_currency
              - allow_multiple_quantity
              - name
  "/v5/app/line_items/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the line item, which will look like li_*************
      schema:
        type: string
    get:
      summary: Retrieve a Line Item
      tags:
      - app/line_items
      security:
      - AppToken: []
      description: Returns a line item
      operationId: get_api_v5_app_line_items_id
      responses:
        '200':
          description: line item found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppLineItem"
    patch:
      summary: Update a Line Item
      tags:
      - app/line_items
      security:
      - AppToken: []
      description: Updates a line item's metadata field
      operationId: update_api_v5_app_line_items_id
      parameters: []
      responses:
        '200':
          description: line item updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppLineItem"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  description: A JSON object containing any additional metadata for
                    the line item.
              required:
              - metadata
    delete:
      summary: Delete a Line Item
      tags:
      - app/line_items
      security:
      - AppToken: []
      description: Deletes a line item
      operationId: delete_api_v5_app_line_items_id
      responses:
        '204':
          description: line item deleted
  "/v5/app/members":
    get:
      summary: List Members
      tags:
      - app/members
      security:
      - AppToken: []
      description: Returns a collection of members
      operationId: get_api_v5_app_members
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: status
        in: query
        required: false
        description: A status to filter by.
        schema:
          type: string
          enum:
          - joined
          - left
      - name: experience_id
        in: query
        required: false
        description: An ID of an experience to filter by, which will look like exp_*************
        schema:
          type: string
      - name: search
        in: query
        required: false
        description: A search to filter by. This will search the member's name and
          username.
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: members retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppMember"
                required:
                - pagination
                - data
  "/v5/app/members/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Member, which will look like mber_*************.
      schema:
        type: string
    get:
      summary: Retrieve a Member
      tags:
      - app/members
      security:
      - AppToken: []
      description: Returns a member
      operationId: get_api_v5_app_members_id
      responses:
        '200':
          description: member found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppMember"
        '404':
          description: member not found
          "$ref": "#/components/responses/NotFound"
  "/v5/app/memberships":
    get:
      summary: List Memberships
      tags:
      - app/memberships
      security:
      - AppToken: []
      description: Returns a collection of memberships. By default, the valid filter
        is set to true.
      operationId: get_api_v5_app_memberships
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: experience_id
        in: query
        required: false
        description: An ID of an experience to filter by, which will look like exp_*************
        schema:
          type: string
      - name: license_key
        in: query
        required: false
        description: A license key to filter by.
        schema:
          type: string
      - name: statuses
        in: query
        required: false
        description: An array of statuses to filter by.
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - trialing
            - past_due
            - completed
            - canceled
            - expired
            - unresolved
      - name: valid
        in: query
        schema:
          type: boolean
          default: true
        required: false
        description: A boolean to filter by valid memberships
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: memberships retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppMembership"
                required:
                - pagination
                - data
  "/v5/app/memberships/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Membership, which will look like mem_*************.
        This can also be the license key
      schema:
        type: string
    get:
      summary: Retrieve a Membership
      tags:
      - app/memberships
      security:
      - AppToken: []
      description: Returns a membership
      operationId: get_api_v5_app_memberships_id
      responses:
        '200':
          description: membership found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppMembership"
    delete:
      summary: Terminate a Membership
      tags:
      - app/memberships
      security:
      - AppToken: []
      description: Terminates the membership. No further payments will be made, and
        the customer will lose access. A terminated membership cannot be reactivated.
      operationId: delete_api_v5_app_membership
      responses:
        '200':
          description: membership terminated
  "/v5/app/memberships/{id}/add_free_days":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Membership, which will look like mem_*************.
        This can also be the license key
      schema:
        type: string
    post:
      summary: Add Free Days to Membership
      tags:
      - app/memberships
      security:
      - AppToken: []
      description: Adds free days to a membership
      operationId: post_api_v5_app_memberships_id_add_free_days
      parameters: []
      responses:
        '200':
          description: free days added
        '400':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                days:
                  type: number
                  description: The number of free days to add to the membership.
              required:
              - days
  "/v5/app/notification_requests":
    post:
      summary: Create a Notification Request
      tags:
      - app/notifications
      security:
      - AppToken: []
      description: Send a notification to a set of targets
      operationId: post_api_v5_app_notification_requests
      parameters: []
      responses:
        '201':
          description: notification request created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    examples:
                    - created
                  message:
                    type: string
                    examples:
                    - We will attempt to send out your notification. This is processed
                      in a background job, so we cannot confirm how many notifications
                      were sent in this request.
        '400':
          description: invalid request
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: object
                  required:
                  - title
                  - content
                  properties:
                    title:
                      type: string
                    subtitle:
                      type: string
                    content:
                      type: string
                topics:
                  type: array
                  items:
                    type: object
                    required:
                    - topic_identifier
                    properties:
                      topic_identifier:
                        type: string
                      users:
                        type: array
                        items:
                          type: string
                sender_user_id:
                  type: string
                external_id:
                  type: string
                link:
                  type: string
                rest_path:
                  type: string
                target:
                  type: object
                  oneOf:
                  - required:
                    - experience
                    properties:
                      experience:
                        type: string
                  - required:
                    - company
                    properties:
                      company:
                        type: string
                  - required:
                    - company_team
                    properties:
                      company_team:
                        type: string
              required:
              - target
              - body
              - topics
  "/v5/app/notification_topics":
    get:
      summary: List Notification Topics
      tags:
      - app/notification_topics
      security:
      - AppToken: []
      description: Returns a collection of notification topics
      operationId: get_api_v5_app_notification_topics
      parameters:
      - name: status
        in: query
        required: false
        description: A status to filter by.
        schema:
          type: string
          enum:
          - active
          - inactive
      - name: topic_type
        in: query
        required: false
        description: A topic type to filter by.
        schema:
          type: string
          enum:
          - company
          - user
      - name: notification_channel_identifiers
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
            - email
            - sms
            - in_app
            - discord_dm
            - mobile
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: notification topics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppNotificationTopic"
                required:
                - pagination
                - data
    post:
      summary: Create a Notification Topic
      tags:
      - app/notification_topics
      security:
      - AppToken: []
      description: Create a notification topic for a company
      operationId: post_api_v5_app_notification_topics
      parameters: []
      responses:
        '201':
          description: notification topic created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppNotificationTopic"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the notification topic
                topic_identifier:
                  type: string
                  description: The identifier of the notification topic
                description:
                  type: string
                  description: The description of the notification topic
                notification_channel_identifiers:
                  type: array
                  items:
                    type: string
                    enum:
                    - email
                    - sms
                    - in_app
                    - discord_dm
                    - mobile
                status:
                  type: string
                  enum:
                  - active
                  - inactive
                topic_type:
                  type: string
                  enum:
                  - company
                  - user
              required:
              - name
              - topic_type
              - notification_channel_identifiers
              - topic_identifier
  "/v5/app/notification_topics/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The topic_identifier of the notification topic, which will be a
        string
      schema:
        type: string
    get:
      summary: Retrieve a Notification Topic
      tags:
      - app/notification_topics
      security:
      - AppToken: []
      description: Returns a notification topic
      operationId: get_api_v5_app_notification_topics_id
      responses:
        '200':
          description: notification topic found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppNotificationTopic"
    patch:
      summary: Update a Notification Topic
      tags:
      - app/notification_topics
      security:
      - AppToken: []
      description: Updates a notification topic
      operationId: update_api_v5_app_notification_topics_id
      parameters: []
      responses:
        '200':
          description: notification topic updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppNotificationTopic"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the notification topic
                topic_identifier:
                  type: string
                  description: The identifier of the notification topic
                description:
                  type: string
                  description: The description of the notification topic
                notification_channel_identifiers:
                  type: array
                  items:
                    type: string
                    enum:
                    - email
                    - sms
                    - in_app
                    - discord_dm
                    - mobile
                status:
                  type: string
                  enum:
                  - active
                  - inactive
                topic_type:
                  type: string
                  enum:
                  - company
                  - user
  "/v5/app/payments":
    get:
      summary: List Payments
      tags:
      - app/payments
      security:
      - AppToken: []
      description: Returns a collection of payments
      operationId: get_api_v5_app_payments
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: in_app_payments
        in: query
        required: false
        description: A boolean of whether or not to return only payments made with
          a line item created by the app. If false, returns all payments without a
          line item.
        schema:
          type: boolean
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: payments retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppPayment"
                required:
                - pagination
                - data
  "/v5/app/payments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Payment, which will look like pay_*************
      schema:
        type: string
    get:
      summary: Retrieve a Payment
      tags:
      - app/payments
      security:
      - AppToken: []
      description: Returns a payment
      operationId: get_api_v5_app_payments_id
      responses:
        '200':
          description: payment found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppPayment"
  "/v5/app/products":
    get:
      summary: List Products
      tags:
      - app/products
      security:
      - AppToken: []
      description: Returns a collection of products
      operationId: get_api_v5_app_products
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: experience_id
        in: query
        required: false
        description: An ID of an experience to filter by, which will look like exp_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: products retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppProduct"
                required:
                - pagination
                - data
  "/v5/app/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Product, which will look like prod_*************
      schema:
        type: string
    get:
      summary: Retrieve a Product
      tags:
      - app/products
      security:
      - AppToken: []
      description: Returns a product
      operationId: get_api_v5_app_products_id
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppProduct"
  "/v5/app/reviews":
    get:
      summary: List Reviews
      tags:
      - app/reviews
      security:
      - AppToken: []
      description: Returns a collection of reviews
      operationId: get_api_v5_app_reviews
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: stars
        in: query
        required: false
        description: The number of stars to filter by. Ex. 1, 2, 3, 4, or 5.
        schema:
          type: number
      - name: status
        in: query
        required: false
        description: A status to filter by.
        schema:
          type: string
          enum:
          - pending
          - published
          - removed
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: reviews retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/AppReview"
                required:
                - pagination
                - data
  "/v5/app/reviews/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Review, which will look like rev_*************.
      schema:
        type: string
    get:
      summary: Retrieve a Review
      tags:
      - app/reviews
      security:
      - AppToken: []
      description: Returns a review
      operationId: get_api_v5_app_reviews_id
      responses:
        '200':
          description: review found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppReview"
        '404':
          description: review not found
          "$ref": "#/components/responses/NotFound"
  "/v5/app/search/documents":
    post:
      summary: Create a document
      tags:
      - app/search
      security:
      - AppToken: []
      description: Create a document
      operationId: post_api_v5_app_search_document
      parameters: []
      responses:
        '201':
          description: document created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: The ID of the document
                user_id:
                  type: string
                  description: The ID of the user
                title:
                  type: string
                  description: The title of the document
                content:
                  type: string
                  description: The content of the document
                experience_id:
                  type: string
                  description: The ID of the experience
                rest_path:
                  type: string
                  description: The REST path of the document
              required:
              - id
              - title
              - content
              - experience_id
              - rest_path
  "/v5/app/search/documents/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    patch:
      summary: Update a document
      tags:
      - app/search
      security:
      - AppToken: []
      description: Update a document
      operationId: update_api_v5_app_search_document_id
      parameters: []
      responses:
        '204':
          description: document updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the document
                content:
                  type: string
                  description: The content of the document
              required:
              - title
              - content
        required: true
    delete:
      summary: Delete a document
      tags:
      - app/search
      security:
      - AppToken: []
      description: Delete a document
      operationId: delete_api_v5_app_search_document_id
      responses:
        '204':
          description: document deleted
  "/v5/app/users/{user_id}/social_accounts":
    parameters:
    - name: user_id
      in: path
      required: true
      description: The ID of the User, which will look like user_*************
      schema:
        type: string
    get:
      summary: List a User's social accounts
      tags:
      - app/users
      security:
      - AppToken: []
      description: Returns a User's social accounts
      operationId: get_api_v5_app_users_id_social_accounts
      responses:
        '200':
          description: social accounts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AppSocialAccount"
  "/v5/app/users":
    get:
      summary: List all User
      tags:
      - app/users
      security:
      - AppToken: []
      description: Returns a user
      operationId: list_api_v5_app_users
      parameters:
      - name: user_ids
        in: query
        required: true
        description: A list of user IDs
        schema:
          type: string
      responses:
        '200':
          description: users retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AppUser"
        '400':
          description: invalid request
          "$ref": "#/components/responses/InvalidParameters"
        '403':
          description: forbidden
          "$ref": "#/components/responses/Forbidden"
  "/v5/app/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the User, which will look like user_*************
      schema:
        type: string
    get:
      summary: Retrieve a User
      tags:
      - app/users
      security:
      - AppToken: []
      description: Returns a user
      operationId: get_api_v5_app_users_id
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AppUser"
  "/v5/company":
    get:
      summary: Retrieve the current company
      tags:
      - company
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a company
      operationId: get_api_v5_company
      responses:
        '200':
          description: company retrieved
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyCompany"
  "/v5/company/memberships":
    get:
      summary: List Memberships
      tags:
      - company/memberships
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a collection of memberships. By default, the valid filter
        is set to true.
      operationId: get_api_v5_company_memberships
      parameters:
      - name: statuses
        in: query
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - trialing
            - past_due
            - completed
            - canceled
            - expired
            - unresolved
      - name: valid
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: product_id
        in: query
        required: false
        schema:
          type: string
      - name: license_key
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
      responses:
        '200':
          description: memberships retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CompanyMembership"
                required:
                - pagination
                - data
  "/v5/company/memberships/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Membership, which will look like mem_*************.
        This can also be the license key
      schema:
        type: string
    get:
      summary: Retrieve a Membership
      tags:
      - company/memberships
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a membership
      operationId: get_api_v5_company_memberships_id
      responses:
        '200':
          description: membership found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyMembership"
    patch:
      summary: Update a Membership
      tags:
      - company/memberships
      security:
      - AppToken: []
      - CompanyToken: []
      description: Updates a membership's metadata
      operationId: update_api_v5_company_memberships_id
      parameters: []
      responses:
        '200':
          description: membership updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyMembership"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  description: The metadata for the membership.
              required:
              - metadata
    delete:
      summary: Terminate a Membership
      tags:
      - company/memberships
      security:
      - AppToken: []
      - CompanyToken: []
      description: Terminates the membership. No further payments will be made, and
        the customer will lose access. A terminated membership cannot be reactivated.
      operationId: delete_api_v5_company_memberships_id
      responses:
        '200':
          description: membership terminated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyMembership"
  "/v5/company/payments":
    get:
      summary: List Payments
      tags:
      - company/payments
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a collection of payments
      operationId: get_api_v5_company_payments
      parameters:
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: payments retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CompanyPayment"
                required:
                - pagination
                - data
  "/v5/company/payments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Payment, which will look like pay_*************
      schema:
        type: string
    get:
      summary: Retrieve a Payment
      tags:
      - company/payments
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a payment
      operationId: get_api_v5_company_payments_id
      responses:
        '200':
          description: payment found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyPayment"
  "/v5/company/products":
    get:
      summary: List Products
      tags:
      - company/products
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a collection of products
      operationId: get_api_v5_company_products
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: products retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CompanyProduct"
                required:
                - pagination
                - data
  "/v5/company/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Product, which will look like prod_*************
      schema:
        type: string
    get:
      summary: Retrieve a Product
      tags:
      - company/products
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a product
      operationId: get_api_v5_company_products_id
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyProduct"
  "/v5/company/reviews":
    get:
      summary: List Reviews
      tags:
      - company/reviews
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a collection of reviews
      operationId: get_api_v5_company_reviews
      parameters:
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: stars
        in: query
        required: false
        description: The number of stars to filter by. Ex. 1, 2, 3, 4, or 5.
        schema:
          type: number
      - name: status
        in: query
        required: false
        description: A status to filter by.
        schema:
          type: string
          enum:
          - pending
          - published
          - removed
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: reviews retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CompanyReview"
                required:
                - pagination
                - data
  "/v5/company/reviews/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Review, which will look like rev_*************.
      schema:
        type: string
    get:
      summary: Retrieve a Review
      tags:
      - company/reviews
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a review
      operationId: get_api_v5_company_reviews_id
      responses:
        '200':
          description: review found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyReview"
        '404':
          description: review not found
  "/v5/company/users/{user_id}/social_accounts":
    parameters:
    - name: user_id
      in: path
      required: true
      description: The ID of the User, which will look like user_*************
      schema:
        type: string
    get:
      summary: List a User's social accounts
      tags:
      - company/users
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a User's social accounts
      operationId: get_api_v5_company_users_id_social_accounts
      responses:
        '200':
          description: social accounts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CompanySocialAccount"
  "/v5/company/users/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the User, which will look like user_*************
      schema:
        type: string
    get:
      summary: Retrieve a User
      tags:
      - company/users
      security:
      - AppToken: []
      - CompanyToken: []
      description: Returns a user
      operationId: get_api_v5_company_users_id
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CompanyUser"
  "/v5/feed/webhooks/{id}/execute":
    post:
      summary: Execute a webhook
      tags:
      - chat
      description: Executes a webhook
      operationId: post_api_v5_feed_webhooks_id_execute
      parameters:
      - name: id
        in: path
        required: true
        description: The ID of the webhook
        schema:
          type: string
      responses:
        '204':
          description: webhook execution accepted
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type:
                  - string
                  - 'null'
                  maxLength: 4000
                embeds:
                  type:
                  - array
                  - 'null'
                  items:
                    type: object
                    properties:
                      type:
                        type:
                        - string
                        - 'null'
                        maxLength: 152133
                      url:
                        type:
                        - string
                        - 'null'
                        maxLength: 2048
                        format: uri
                      title:
                        type:
                        - string
                        - 'null'
                        maxLength: 256
                      color:
                        type:
                        - integer
                        - 'null'
                        minimum: 0
                        maximum: 16777215
                      timestamp:
                        type:
                        - string
                        - 'null'
                        format: date-time
                      description:
                        type:
                        - string
                        - 'null'
                        maxLength: 4096
                      image:
                        oneOf:
                        - type: 'null'
                        - type: object
                          properties:
                            url:
                              type:
                              - string
                              - 'null'
                              maxLength: 2048
                              format: uri
                            width:
                              type:
                              - integer
                              - 'null'
                            height:
                              type:
                              - integer
                              - 'null'
                      thumbnail:
                        oneOf:
                        - type: 'null'
                        - type: object
                          properties:
                            url:
                              type:
                              - string
                              - 'null'
                              maxLength: 2048
                              format: uri
                            width:
                              type:
                              - integer
                              - 'null'
                            height:
                              type:
                              - integer
                              - 'null'
                      footer:
                        oneOf:
                        - type: 'null'
                        - type: object
                          properties:
                            text:
                              type:
                              - string
                              - 'null'
                              maxLength: 2048
                            icon_url:
                              type:
                              - string
                              - 'null'
                              maxLength: 2048
                              format: uri
                      fields:
                        type:
                        - array
                        - 'null'
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              maxLength: 256
                            value:
                              type: string
                              maxLength: 1024
                            inline:
                              type:
                              - boolean
                              - 'null'
                          required:
                          - name
                          - value
                        maxItems: 25
                  maxItems: 10
                attachments:
                  type:
                  - array
                  - 'null'
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        pattern: "^(0|[1-9][0-9]*)$"
                        format: snowflake
                      filename:
                        type:
                        - string
                        - 'null'
                        maxLength: 1024
                      description:
                        type:
                        - string
                        - 'null'
                        maxLength: 1024
                      duration_secs:
                        type:
                        - number
                        - 'null'
                        minimum: 0
                        maximum: 2147483647
                        format: double
                      waveform:
                        type:
                        - string
                        - 'null'
                        maxLength: 400
                      title:
                        type:
                        - string
                        - 'null'
                        maxLength: 1024
                      is_remix:
                        type:
                        - boolean
                        - 'null'
                    required:
                    - id
                  maxItems: 10
  "/v5/me/companies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Company, which will look like biz_*************
      schema:
        type: string
    get:
      summary: Retrieve a Company
      tags:
      - me/companies
      security:
      - UserToken: []
      - AppProxyToken: []
      parameters:
      - name: x-include-admin
        in: header
        required: false
        schema:
          type: boolean
      description: Returns a company
      operationId: get_api_v5_me_companies_id
      responses:
        '200':
          description: company retrieved
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeCompany"
  "/v5/me/experiences":
    get:
      summary: List Experiences
      tags:
      - me/experiences
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a collection of experiences
      operationId: get_api_v5_me_experiences
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
        description: The page number to retrieve
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
        description: The number of resources to return per page. There is a limit
          of 50 results per page.
      responses:
        '200':
          description: experiences retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MeExperience"
                required:
                - pagination
                - data
  "/v5/me/experiences/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Experience, which will look like exp_*************
      schema:
        type: string
    get:
      summary: Retrieve an Experience
      tags:
      - me/experiences
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a single experience
      operationId: get_api_v5_me_experiences_id
      responses:
        '200':
          description: experience retrieved
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeExperience"
        '404':
          description: Not found
          "$ref": "#/components/responses/NotFound"
  "/v5/me":
    get:
      summary: Retrieve the current user
      tags:
      - me
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a user
      operationId: get_api_v5_me
      responses:
        '200':
          description: user retrieved
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeUser"
  "/v5/me/memberships":
    get:
      summary: List Memberships
      tags:
      - me/memberships
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a collection of memberships. By default, the valid filter
        is set to true.
      operationId: get_api_v5_me_memberships
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: statuses
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            enum:
            - active
            - trialing
            - past_due
            - completed
            - canceled
            - expired
            - unresolved
      - name: valid
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: license_key
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
      responses:
        '200':
          description: memberships retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MeMembership"
                required:
                - pagination
                - data
  "/v5/me/memberships/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Membership, which will look like mem_*************.
        This can also be the license key
      schema:
        type: string
    get:
      summary: Retrieve a Membership
      tags:
      - me/memberships
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a membership
      operationId: get_api_v5_me_memberships_id
      responses:
        '200':
          description: membership found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeMembership"
  "/v5/me/payments":
    get:
      summary: List Payments
      tags:
      - me/payments
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a collection of payments
      operationId: get_api_v5_me_payments
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: line_item_id
        in: query
        required: false
        description: An ID of a line item to filter by, which will look like li_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
      responses:
        '200':
          description: payments retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MePayment"
                required:
                - pagination
                - data
  "/v5/me/payments/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Payment, which will look like pay_*************
      schema:
        type: string
    get:
      summary: Retrieve a Payment
      tags:
      - me/payments
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a payment
      operationId: get_api_v5_me_payments_id
      responses:
        '200':
          description: payment found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MePayment"
  "/v5/me/products":
    get:
      summary: List Products
      tags:
      - me/products
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a collection of products
      operationId: get_api_v5_me_products
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
      responses:
        '200':
          description: products retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MeProduct"
                required:
                - pagination
                - data
  "/v5/me/products/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Product, which will look like prod_*************
      schema:
        type: string
    get:
      summary: Retrieve a Product
      tags:
      - me/products
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a product
      operationId: get_api_v5_me_products_id
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeProduct"
  "/v5/me/reviews":
    get:
      summary: List Reviews
      tags:
      - me/reviews
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a collection of reviews
      operationId: get_api_v5_me_reviews
      parameters:
      - name: company_id
        in: query
        required: false
        description: An ID of a company to filter by, which will look like biz_*************
        schema:
          type: string
      - name: product_id
        in: query
        required: false
        description: An ID of a product to filter by, which will look like prod_*************
        schema:
          type: string
      - name: user_id
        in: query
        required: false
        description: An ID of a user to filter by, which will look like user_*************
        schema:
          type: string
      - name: stars
        in: query
        required: false
        description: The number of stars to filter by. Ex. 1, 2, 3, 4, or 5.
        schema:
          type: number
      - name: status
        in: query
        required: false
        description: A status to filter by.
        schema:
          type: string
          enum:
          - pending
          - published
          - removed
      - name: page
        in: query
        schema:
          type: integer
          default: 1
        required: false
      - name: per
        in: query
        schema:
          type: integer
          default: 10
        required: false
      responses:
        '200':
          description: reviews retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    "$ref": "#/components/schemas/Pagination"
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/MeReview"
                required:
                - pagination
                - data
  "/v5/me/reviews/{id}":
    parameters:
    - name: id
      in: path
      required: true
      description: The ID of the Review, which will look like rev_*************.
      schema:
        type: string
    get:
      summary: Retrieve a Review
      tags:
      - me/reviews
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a review
      operationId: get_api_v5_me_reviews_id
      responses:
        '200':
          description: review found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MeReview"
        '404':
          description: review not found
  "/v5/me/social_accounts":
    get:
      summary: List a User's social accounts
      tags:
      - me
      security:
      - UserToken: []
      - AppProxyToken: []
      description: Returns a User's social accounts
      operationId: get_api_v5_me_social_accounts
      responses:
        '200':
          description: social accounts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MeSocialAccount"
  "/v5/oauth/token":
    post:
      summary: Create an OAuth Token
      tags:
      - oauth
      security: []
      description: Exchange a code for a token
      operationId: post_api_v5_oauth_token
      parameters: []
      responses:
        '200':
          description: oauth token created
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: The access token of the user
                required:
                - access_token
        '400':
          description: invalid parameters
          "$ref": "#/components/responses/InvalidParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                  - authorization_code
                  description: The grant type
                code:
                  type: string
                  description: The authorization code
                client_id:
                  type: string
                  description: The client ID of your oAuth application.
                client_secret:
                  type: string
                  description: The client secret of your oAuth application.
                redirect_uri:
                  type: string
                  description: The redirect URI
              required:
              - grant_type
              - code
              - client_id
              - client_secret
              - redirect_uri
components:
  securitySchemes:
    WebhookSignature:
      type: apiKey
      in: header
      name: x-whop-signature
    AppToken:
      type: http
      scheme: bearer
      description: App API key for /v5/app and /v5/company endpoints
    AppProxyToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Apps proxy JWT token for /v5/me endpoints
    UserToken:
      type: http
      scheme: bearer
      description: User OAuth token for /v5/me endpoints
    CompanyToken:
      type: http
      scheme: bearer
      description: Company API key for /v5/company endpoints
  schemas:
    BillingAddress:
      type: object
      properties:
        name:
          type: string
          nullable: true
          description: The first and last name of the person
        line1:
          type: string
          nullable: true
          description: The first line of the address
        line2:
          type: string
          nullable: true
          description: The second line of the address
        city:
          type: string
          nullable: true
          description: The city of the address
        state:
          type: string
          nullable: true
          description: The state of the address
        postal_code:
          type: string
          nullable: true
          description: The postal code of the address
        country:
          type: string
          nullable: true
          description: The country of the address
      required:
      - name
      - line1
      - line2
      - city
      - state
      - postal_code
      - country
    AppProduct:
      type: object
      properties:
        id:
          type: string
          description: The ID of the product, which will look like prod_*************
        created_at:
          type: number
          description: The date the product was created
        name:
          type: ''
        title:
          type: string
          description: The name of the product
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        description:
          type: ''
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        visibility:
          type: string
          description: The visibility of the product
          enum:
          - visible
          - hidden
          - archived
          - quick_link
      required:
      - id
      - created_at
      - name
      - title
      - company_id
      - description
      - page_id
      - visibility
    AppAppConnection:
      type: object
      properties:
        id:
          type: string
          description: The ID of the app connection, which will look like apco_*************
        created_at:
          type: number
          description: The date the app connection was created.
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        app_id:
          type: string
          description: The ID of the app, which will look like app_*************
        resource_id:
          type: string
          description: The ID of the polymorphic resource for the connection. Ex.
            a product ID like prod_*************.
        resource_type:
          type: string
          description: The type of the polymorphic resource for the connection. Ex.
            'product'
        view_type:
          type: string
          description: The type of view for the connection.
          enum:
          - customer_product_view
          - seller_product_view
          - customer_before_checkout_view
      required:
      - id
      - created_at
      - company_id
      - app_id
      - resource_id
      - resource_type
      - view_type
    AppApp:
      type: object
      properties:
        id:
          type: string
          description: The ID of the app, which will look like app_*************
        created_at:
          type: number
          description: The date the app was created.
        name:
          type: string
          description: The name of the app
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        icon_url:
          type: string
          nullable: true
          description: The URL of the app's icon
      required:
      - id
      - created_at
      - name
      - company_id
    AppAuthorizedUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        role:
          type: string
          nullable: true
          description: The role of the user
          enum:
          - owner
          - admin
          - sales_manager
          - moderator
          - app_manager
          - support
          - manager
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        user:
          "$ref": "#/components/schemas/AppUser"
      required:
      - id
      - user_id
      - company_id
      - user
    AppCompany:
      type: object
      properties:
        id:
          type: string
          description: The ID of the company object, which will look like biz_*************
        created_at:
          type: number
          description: The date the company was created.
        title:
          type: string
          description: The title of the company
        image_url:
          type: string
          nullable: true
          description: The URL of the company's image
        authorized_user:
          "$ref": "#/components/schemas/AppAuthorizedUser"
          nullable: true
        has_payment_method:
          type: boolean
          description: Whether or not the company has a payment method on file to
            charge for metered billing usage.
        route:
          type: string
          nullable: true
          description: The route to the company's first/default page
        owner:
          "$ref": "#/components/schemas/AppUser"
      required:
      - id
      - created_at
      - title
      - owner
    AppCustomFieldResponse:
      type: object
      properties:
        id:
          type: string
        created_at:
          type: number
        updated_at:
          type: number
        question:
          type: string
          description: The question the user was asked.
        answer:
          type: string
          nullable: true
          description: The user's response to the custom field question.
      required:
      - id
      - created_at
      - updated_at
      - question
    AppExperience:
      type: object
      properties:
        id:
          type: string
          description: The ID of the experience, which will look like exp_*************
        created_at:
          type: number
          description: The date the experience was created.
        name:
          type: string
          description: The name of the experience
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        product_ids:
          type: array
          items:
            type: string
            description: The ID of the product, which will look like prod_*************
        app_id:
          type: string
          description: The ID of the app, which will look like app_*************
        app_icon_url:
          type: string
          description: The URL of the app's icon
        access_level:
          type: string
          description: The access level of the experience. Always private, don't use
            this
        features:
          type: array
          items:
            type: string
        metadata:
          type: object
          nullable: true
          description: The metadata of the experience
        hub_url:
          type: string
          description: The full URL of the experience's app view in the Whop hub
      required:
      - id
      - created_at
      - name
      - company_id
      - product_ids
      - app_id
      - app_icon_url
      - access_level
      - features
      - hub_url
    AppInboundWebhookFilter:
      type: object
      properties:
        id:
          type: string
          description: The ID of the inbound webhook, which will look like inwh_*************
        experience_id:
          type: string
          description: The ID of the experience, which will look like exp_*************
        filters:
          type: object
          description: The values the experience will filter by
      required:
      - id
      - experience_id
      - filters
    AppInboundWebhook:
      type: object
      properties:
        id:
          type: string
          description: The ID of the inbound webhook, which will look like inwh_*************
        filter_values:
          type: object
          description: The filter values of the inbound webhook
        discord_embed:
          type: object
          description: The discord embed of the inbound webhook
        idempotent_key:
          type: string
          nullable: true
          description: The idempotent key of the inbound webhook
        timestamp:
          type: string
          description: 'The timestamp of the inbound webhook in ISO8601 format. Example:
            2021-01-01T00:00:00Z'
      required:
      - id
      - filter_values
      - discord_embed
      - timestamp
    AppLineItem:
      type: object
      properties:
        id:
          type: string
          description: The ID of the line item, which will look like li_*************
        created_at:
          type: number
          description: The date the line item was created.
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        app_id:
          type: string
          description: The ID of the app, which will look like app_*************
        name:
          type: string
          description: The name of the line item.
        description:
          type: string
          nullable: true
          description: A textual description for the line item.
        amount:
          type: number
          description: The amount (price) for the line item.
        base_currency:
          type: string
          description: A three letter currency code for the line item.
          enum:
          - usd
          - sgd
          - inr
          - aud
          - brl
          - cad
          - dkk
          - eur
          - nok
          - gbp
          - sek
          - chf
          - hkd
          - huf
          - jpy
          - mxn
          - myr
          - pln
          - czk
          - nzd
          - aed
          - eth
          - ape
          - cop
          - ron
          - thb
          - bgn
          - idr
          - dop
          - php
          - try
          - krw
          - twd
          - vnd
          - pkr
          - clp
          - uyu
          - ars
          - zar
          - dzd
          - tnd
          - mad
          - kes
          - kwd
          - jod
          - all
          - xcd
          - amd
          - bsd
          - bhd
          - bob
          - bam
          - khr
          - crc
          - xof
          - egp
          - etb
          - gmd
          - ghs
          - gtq
          - gyd
          - ils
          - jmd
          - mop
          - mga
          - mur
          - mdl
          - mnt
          - nad
          - ngn
          - mkd
          - omr
          - pyg
          - pen
          - qar
          - rwf
          - sar
          - rsd
          - lkr
          - tzs
          - ttd
          - uzs
          - rub
        allow_multiple_quantity:
          type: boolean
          description: Whether or not the line item can be purchased as multiple quantity.
        metadata:
          type: object
          description: A JSON object containing any additional metadata for the line
            item.
      required:
      - id
      - created_at
      - company_id
      - app_id
      - name
      - amount
      - base_currency
      - allow_multiple_quantity
      - metadata
    AppMember:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        status:
          type: string
          description: The status of the member
          enum:
          - drafted
          - joined
          - left
        most_recent_action:
          type: string
          nullable: true
          description: The most recent action of the member
          enum:
          - canceling
          - churned
          - finished_split_pay
          - paused
          - paid_subscriber
          - paid_once
          - expiring
          - joined
          - drafted
          - left
          - trialing
          - pending_entry
          - renewing
          - past_due
        joined_at:
          type: integer
          description: The date the member was created as a unix timestamp.
        user:
          "$ref": "#/components/schemas/AppUser"
      required:
      - id
      - company_id
      - user_id
      - status
      - joined_at
      - user
    AppMembership:
      type: object
      properties:
        id:
          type: string
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          description: The ID of the plan, which will look like plan_*************
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        created_at:
          type: number
          description: The time at which the Membership was created. Measured in seconds
            since the Unix epoch.
        expires_at:
          type: integer
          nullable: true
          description: The time of when the Membership is set to go expired
        renewal_period_start:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will begin
        renewal_period_end:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will end
        quantity:
          type: number
          description: The quantity purchased
        status:
          type: string
          nullable: true
          description: The status of the membership
          enum:
          - trialing
          - active
          - past_due
          - completed
          - canceled
          - expired
          - unresolved
        valid:
          type: boolean
          description: Whether or not the membership is valid
        cancel_at_period_end:
          type: boolean
          description: Whether or not this membership is scheduled to cancel at the
            end of the renewal period.
        license_key:
          type: string
          nullable: true
          description: The license key for the membership
        metadata:
          type: object
          description: The metadata for the membership
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to first purchase / generate the
            membership.
        affiliate_username:
          type: string
          nullable: true
          description: The username of the affiliate that referred the customer to
            this membership, if any.
        manage_url:
          type: string
          description: The URL for the customer to manage their membership on whop.com.
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that purchased/owns the membership. (For
            example, they installed an app). Looks like biz_*************
        marketplace:
          type: boolean
          description: Whether or not the membership was purchased through the whop
            marketplace.
        custom_field_responses:
          type: array
          items:
            "$ref": "#/components/schemas/AppCustomFieldResponse"
            description: Array of related custom field responses.
      required:
      - id
      - product_id
      - user_id
      - plan_id
      - page_id
      - created_at
      - expires_at
      - renewal_period_start
      - renewal_period_end
      - quantity
      - valid
      - cancel_at_period_end
      - metadata
      - affiliate_username
      - manage_url
      - custom_field_responses
    AppNotificationTopic:
      type: object
      properties:
        app_id:
          type: string
          description: The ID of the app, which will look like app_*************
        created_at:
          type: number
          description: The date the notification topic was created as a unix timestamp.
        name:
          type: string
          description: The name of the notification topic
        description:
          type: string
          nullable: true
          description: The description of the notification topic
        notification_channel_identifiers:
          type: array
          items:
            type: string
            description: The identifier of the notification channel
            enum:
            - email
            - sms
            - in_app
            - discord_dm
            - mobile
        status:
          type: string
          description: The status of the notification topic
          enum:
          - active
          - inactive
        topic_identifier:
          type: string
          description: The identifier of the notification topic
        topic_type:
          type: string
          description: The type of the notification topic
          enum:
          - company
          - user
          - company_team
        visibility:
          type: string
          description: The visibility of the notification topic
          enum:
          - visible
          - hidden
      required:
      - app_id
      - created_at
      - name
      - notification_channel_identifiers
      - status
      - topic_identifier
      - topic_type
      - visibility
    AppPayment:
      type: object
      properties:
        id:
          type: string
          description: The ID of the payment, which will look like pay_*************
        membership_id:
          type: string
          nullable: true
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          nullable: true
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          nullable: true
          description: The ID of the plan, which will look like plan_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        line_item_id:
          type: string
          nullable: true
          description: The line item this receipt was purchased with. This is for
            in-app purchases.
        created_at:
          type: number
          description: The time at which the Payment was created. Measured in seconds
            since the Unix epoch. Does not necessarily reflect the time the Payment
            was successful.
        paid_at:
          type: string
          nullable: true
          description: The time at which the Payment was successful. Measured in seconds
            since the Unix epoch.
        refunded_at:
          type: string
          nullable: true
          description: The time at which the Payment was refunded. Measured in seconds
            since the Unix epoch.
        last_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the last time the Payment was attempted
        next_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the next time the Payment will be attempted
        status:
          type: string
          description: The status of the payment
          enum:
          - draft
          - open
          - paid
          - pending
          - uncollectible
          - unresolved
          - void
        subtotal:
          type: number
          nullable: true
          description: The amount paid by the User, before any discounts or taxes
        final_amount:
          type: number
          description: The total amount paid by the User, including any discounts
            or taxes
        currency:
          type: string
          description: The three letter currency the Payment was made in
          enum:
          - usd
          - sgd
          - inr
          - aud
          - brl
          - cad
          - dkk
          - eur
          - nok
          - gbp
          - sek
          - chf
          - hkd
          - huf
          - jpy
          - mxn
          - myr
          - pln
          - czk
          - nzd
          - aed
          - eth
          - ape
          - cop
          - ron
          - thb
          - bgn
          - idr
          - dop
          - php
          - try
          - krw
          - twd
          - vnd
          - pkr
          - clp
          - uyu
          - ars
          - zar
          - dzd
          - tnd
          - mad
          - kes
          - kwd
          - jod
          - all
          - xcd
          - amd
          - bsd
          - bhd
          - bob
          - bam
          - khr
          - crc
          - xof
          - egp
          - etb
          - gmd
          - ghs
          - gtq
          - gyd
          - ils
          - jmd
          - mop
          - mga
          - mur
          - mdl
          - mnt
          - nad
          - ngn
          - mkd
          - omr
          - pyg
          - pen
          - qar
          - rwf
          - sar
          - rsd
          - lkr
          - tzs
          - ttd
          - uzs
          - rub
        refunded_amount:
          type: number
          nullable: true
          description: The amount that was refunded to the User (if applicable)
        payments_failed:
          type: number
          nullable: true
          description: The number of times the Payment has failed
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to execute this payment, if applicable.
        card_brand:
          type: string
          nullable: true
          description: If the payment was made with a credit/debit card, the brand
            of the card.
        card_last_4:
          type: string
          nullable: true
          description: The last 4 digits of the debit/credit card used to make the
            payment, if applicable.
        funding_method:
          type: string
          nullable: true
          description: The funding method of the payment, if applicable.
        wallet_type:
          type: string
          nullable: true
          description: The wallet type of the payment, if applicable.
          enum:
          - apple_pay
          - google_pay
          - paypal
          - venmo
        calculated_statement_descriptor:
          type: string
          nullable: true
          description: The statement descriptor that appears on the customer's bank
            statement for the payment, if applicable.
        issuer_identification_number:
          type: string
          nullable: true
          description: The IIN/BIN of the payment, if applicable.
        billing_usage_ids:
          type: array
          items:
            type: string
            description: The IDs of billing usages connected to this payment, which
              will look like bu_*************
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that made the payment. (For example,
            they installed an app). Looks like biz_*************
      required:
      - id
      - membership_id
      - product_id
      - user_id
      - plan_id
      - company_id
      - line_item_id
      - created_at
      - status
      - final_amount
      - currency
      - wallet_type
      - billing_usage_ids
    AppReview:
      type: object
      properties:
        id:
          type: string
          description: The ID of the review, which will look like rev_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        status:
          type: string
          description: The status of the review
          enum:
          - pending
          - published
          - removed
        stars:
          type: number
          description: The rating of the review. It will be an integer between one
            and five.
        description:
          type: string
          nullable: true
          description: The text response the user left for the review.
        joined_at:
          type: integer
          description: The date the customer first joined the creator's whop.
        created_at:
          type: number
          description: The date the review was created.
      required:
      - id
      - company_id
      - product_id
      - user_id
      - status
      - stars
      - joined_at
      - created_at
    AppSocialAccount:
      type: object
      properties:
        service:
          type: string
          description: The type of social account that it is.
          enum:
          - discord
          - twitter
        username:
          type: string
          nullable: true
          description: The username of the social account
        default:
          type: boolean
          nullable: true
          description: Whether or not this is the default social account for the user's
            account for the provider.
        account_id:
          type: string
          description: The ID of the social account from the provider, like a discord
            ID or twitter ID.
        image_url:
          type: string
          nullable: true
          description: A URL for the image of the social account.
      required:
      - service
      - default
      - account_id
    AppUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        name:
          type: string
          description: The first and last name of the user.
        username:
          type: string
          description: The username of the user
        email:
          type: string
          nullable: true
          description: The email of the user
        profile_pic_url:
          type: string
          description: The URL of the user's profile picture
        created_at:
          type: number
          description: The date the user was created.
        profile_pic_url_32:
          type: string
          description: The URL of the user's profile picture at 32x32 pixels
        profile_pic_url_64:
          type: string
          description: The URL of the user's profile picture at 64x64 pixels
        profile_pic_url_128:
          type: string
          description: The URL of the user's profile picture at 128x128 pixels
      required:
      - id
      - username
      - created_at
    CompanyProduct:
      type: object
      properties:
        id:
          type: string
          description: The ID of the product, which will look like prod_*************
        created_at:
          type: number
          description: The date the product was created
        name:
          type: ''
        title:
          type: string
          description: The name of the product
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        description:
          type: ''
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        visibility:
          type: string
          description: The visibility of the product
          enum:
          - visible
          - hidden
          - archived
          - quick_link
      required:
      - id
      - created_at
      - name
      - title
      - company_id
      - description
      - page_id
      - visibility
    CompanyAuthorizedUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        role:
          type: string
          nullable: true
          description: The role of the user
          enum:
          - owner
          - admin
          - sales_manager
          - moderator
          - app_manager
          - support
          - manager
      required:
      - id
      - user_id
    CompanyCompany:
      type: object
      properties:
        id:
          type: string
          description: The ID of the company object, which will look like biz_*************
        created_at:
          type: number
          description: The date the company was created.
        title:
          type: string
          description: The title of the company
        image_url:
          type: string
          nullable: true
          description: The URL of the company's image
        authorized_user:
          "$ref": "#/components/schemas/CompanyAuthorizedUser"
          nullable: true
        route:
          type: string
          nullable: true
          description: The route to the company's first/default page
      required:
      - id
      - created_at
      - title
    CompanyCheckoutSession:
      type: object
      properties:
        id:
          type: string
        redirect_url:
          type: string
          nullable: true
        affiliate_code:
          type: string
          nullable: true
        metadata:
          type: object
        purchase_url:
          type: ''
        plan_id:
          type: string
          description: The ID of the plan, which will look like plan_*************
      required:
      - id
      - metadata
      - purchase_url
      - plan_id
    CompanyDispute:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
          - warning_needs_response
          - warning_under_review
          - warning_closed
          - needs_response
          - under_review
          - won
          - lost
        amount:
          type: number
          nullable: true
        currency:
          type: string
          nullable: true
        created_at:
          type: number
        payment_id:
          type: ''
        payment:
          type: ''
      required:
      - id
      - status
      - created_at
      - payment_id
      - payment
    CompanyMembership:
      type: object
      properties:
        id:
          type: string
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          description: The ID of the plan, which will look like plan_*************
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        created_at:
          type: number
          description: The time at which the Membership was created. Measured in seconds
            since the Unix epoch.
        expires_at:
          type: integer
          nullable: true
          description: The time of when the Membership is set to go expired
        renewal_period_start:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will begin
        renewal_period_end:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will end
        quantity:
          type: number
          description: The quantity purchased
        status:
          type: string
          nullable: true
          description: The status of the membership
          enum:
          - trialing
          - active
          - past_due
          - completed
          - canceled
          - expired
          - unresolved
        valid:
          type: boolean
          description: Whether or not the membership is valid
        cancel_at_period_end:
          type: boolean
          description: Whether or not this membership is scheduled to cancel at the
            end of the renewal period.
        license_key:
          type: string
          nullable: true
          description: The license key for the membership
        metadata:
          type: object
          description: The metadata for the membership
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to first purchase / generate the
            membership.
        affiliate_username:
          type: string
          nullable: true
          description: The username of the affiliate that referred the customer to
            this membership, if any.
        manage_url:
          type: string
          description: The URL for the customer to manage their membership on whop.com.
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that purchased/owns the membership. (For
            example, they installed an app). Looks like biz_*************
        marketplace:
          type: boolean
          description: Whether or not the membership was purchased through the whop
            marketplace.
      required:
      - id
      - product_id
      - user_id
      - plan_id
      - page_id
      - created_at
      - expires_at
      - renewal_period_start
      - renewal_period_end
      - quantity
      - valid
      - cancel_at_period_end
      - metadata
      - affiliate_username
      - manage_url
    CompanyPayment:
      type: object
      properties:
        id:
          type: string
          description: The ID of the payment, which will look like pay_*************
        membership_id:
          type: string
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          description: The ID of the plan, which will look like plan_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        line_item_id:
          type: number
          nullable: true
          description: The line item this receipt was purchased with. This is for
            in-app purchases.
        created_at:
          type: number
          description: The time at which the Payment was created. Measured in seconds
            since the Unix epoch. Does not necessarily reflect the time the Payment
            was successful.
        paid_at:
          type: string
          nullable: true
          description: The time at which the Payment was successful. Measured in seconds
            since the Unix epoch.
        refunded_at:
          type: string
          nullable: true
          description: The time at which the Payment was refunded. Measured in seconds
            since the Unix epoch.
        last_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the last time the Payment was attempted
        next_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the next time the Payment will be attempted
        status:
          type: string
          description: The status of the payment
          enum:
          - draft
          - open
          - paid
          - pending
          - uncollectible
          - unresolved
          - void
        subtotal:
          type: number
          nullable: true
          description: The amount paid by the User, before any discounts or taxes
        final_amount:
          type: number
          description: The total amount paid by the User, including any discounts
            or taxes
        currency:
          type: string
          description: The three letter currency the Payment was made in
          enum:
          - usd
          - sgd
          - inr
          - aud
          - brl
          - cad
          - dkk
          - eur
          - nok
          - gbp
          - sek
          - chf
          - hkd
          - huf
          - jpy
          - mxn
          - myr
          - pln
          - czk
          - nzd
          - aed
          - eth
          - ape
          - cop
          - ron
          - thb
          - bgn
          - idr
          - dop
          - php
          - try
          - krw
          - twd
          - vnd
          - pkr
          - clp
          - uyu
          - ars
          - zar
          - dzd
          - tnd
          - mad
          - kes
          - kwd
          - jod
          - all
          - xcd
          - amd
          - bsd
          - bhd
          - bob
          - bam
          - khr
          - crc
          - xof
          - egp
          - etb
          - gmd
          - ghs
          - gtq
          - gyd
          - ils
          - jmd
          - mop
          - mga
          - mur
          - mdl
          - mnt
          - nad
          - ngn
          - mkd
          - omr
          - pyg
          - pen
          - qar
          - rwf
          - sar
          - rsd
          - lkr
          - tzs
          - ttd
          - uzs
          - rub
        refunded_amount:
          type: number
          nullable: true
          description: The amount that was refunded to the User (if applicable)
        payments_failed:
          type: number
          nullable: true
          description: The number of times the Payment has failed
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to execute this payment, if applicable.
        card_brand:
          type: string
          nullable: true
          description: If the payment was made with a credit/debit card, the brand
            of the card.
        card_last_4:
          type: string
          nullable: true
          description: The last 4 digits of the debit/credit card used to make the
            payment, if applicable.
        funding_method:
          type: string
          nullable: true
          description: The funding method of the payment, if applicable.
        wallet_type:
          type: string
          nullable: true
          description: The wallet type of the payment, if applicable.
          enum:
          - apple_pay
          - google_pay
          - paypal
          - venmo
        calculated_statement_descriptor:
          type: string
          nullable: true
          description: The statement descriptor that appears on the customer's bank
            statement for the payment, if applicable.
        issuer_identification_number:
          type: string
          nullable: true
          description: The IIN/BIN of the payment, if applicable.
        billing_usage_ids:
          type: array
          items:
            type: string
            description: The IDs of billing usages connected to this payment, which
              will look like bu_*************
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that made the payment. (For example,
            they installed an app). Looks like biz_*************
        billing_address:
          "$ref": "#/components/schemas/BillingAddress"
        user_email:
          type: string
          description: The email of the user that made the payment
        user_username:
          type: string
          description: The username of the user that made the payment
        membership_metadata:
          type: ''
        affiliate:
          type: ''
      required:
      - id
      - membership_id
      - product_id
      - user_id
      - plan_id
      - company_id
      - created_at
      - status
      - final_amount
      - currency
      - billing_usage_ids
      - membership_metadata
      - affiliate
    CompanyRefund:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
          - pending
          - requires_action
          - succeeded
          - failed
          - canceled
        amount:
          type: number
        currency:
          type: string
        gateway_type:
          type: ''
        created_at:
          type: number
        payment_id:
          type: ''
        payment:
          type: ''
      required:
      - id
      - status
      - amount
      - currency
      - gateway_type
      - created_at
      - payment_id
      - payment
    CompanyReview:
      type: object
      properties:
        id:
          type: string
          description: The ID of the review, which will look like rev_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        status:
          type: string
          description: The status of the review
          enum:
          - pending
          - published
          - removed
        stars:
          type: number
          description: The rating of the review. It will be an integer between one
            and five.
        description:
          type: string
          nullable: true
          description: The text response the user left for the review.
        joined_at:
          type: integer
          description: The date the customer first joined the creator's whop.
        created_at:
          type: number
          description: The date the review was created.
      required:
      - id
      - company_id
      - product_id
      - user_id
      - status
      - stars
      - joined_at
      - created_at
    CompanySocialAccount:
      type: object
      properties:
        service:
          type: string
          description: The type of social account that it is.
          enum:
          - discord
          - twitter
        username:
          type: string
          nullable: true
          description: The username of the social account
        default:
          type: boolean
          nullable: true
          description: Whether or not this is the default social account for the user's
            account for the provider.
        account_id:
          type: string
          description: The ID of the social account from the provider, like a discord
            ID or twitter ID.
        image_url:
          type: string
          nullable: true
          description: A URL for the image of the social account.
      required:
      - service
      - default
      - account_id
    CompanyUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        name:
          type: string
          description: The first and last name of the user.
        username:
          type: string
          description: The username of the user
        email:
          type: string
          nullable: true
          description: The email of the user
        profile_pic_url:
          type: string
          description: The URL of the user's profile picture
      required:
      - id
      - username
    MeProduct:
      type: object
      properties:
        id:
          type: string
          description: The ID of the product, which will look like prod_*************
        created_at:
          type: number
          description: The date the product was created
        name:
          type: string
          nullable: true
          description: This field has been deprecated. Please use 'title' instead.
        title:
          type: string
          description: The name of the product
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        description:
          type: string
          nullable: true
          description: This field has been deprecated
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        visibility:
          type: string
          description: The visibility of the product
          enum:
          - visible
          - hidden
          - archived
          - quick_link
      required:
      - id
      - created_at
      - title
      - company_id
      - page_id
      - visibility
    MeAuthorizedUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        role:
          type: string
          nullable: true
          description: The role of the user
          enum:
          - owner
          - admin
          - sales_manager
          - moderator
          - app_manager
          - support
          - manager
      required:
      - id
      - user_id
    MeCompany:
      type: object
      properties:
        id:
          type: string
          description: The ID of the company object, which will look like biz_*************
        created_at:
          type: number
          description: The date the company was created.
        title:
          type: string
          description: The title of the company
        image_url:
          type: string
          nullable: true
          description: The URL of the company's image
        authorized_user:
          "$ref": "#/components/schemas/MeAuthorizedUser"
          nullable: true
        route:
          type: string
          nullable: true
          description: The route to the company's first/default page
      required:
      - id
      - created_at
      - title
    MeExperience:
      type: object
      properties:
        id:
          type: string
          description: The ID of the experience, which will look like exp_*************
        created_at:
          type: number
          description: The date the experience was created.
        name:
          type: string
          description: The name of the experience
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        product_ids:
          type: array
          items:
            type: string
            description: The ID of the product, which will look like prod_*************
        app_id:
          type: string
          description: The ID of the app, which will look like app_*************
        app_icon_url:
          type: string
          nullable: true
          description: The URL of the app's icon
        access_level:
          type: string
          description: The access level of the experience. Always private, don't use
            this
      required:
      - id
      - created_at
      - name
      - company_id
      - product_ids
      - app_id
      - access_level
    MeMembership:
      type: object
      properties:
        id:
          type: string
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          description: The ID of the plan, which will look like plan_*************
        page_id:
          type: string
          description: The ID of the page, which will look like page_*************
        created_at:
          type: number
          description: The time at which the Membership was created. Measured in seconds
            since the Unix epoch.
        expires_at:
          type: integer
          nullable: true
          description: The time of when the Membership is set to go expired
        renewal_period_start:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will begin
        renewal_period_end:
          type: integer
          nullable: true
          description: The UTC timestamp of when the Membership will end
        quantity:
          type: number
          description: The quantity purchased
        status:
          type: string
          nullable: true
          description: The status of the membership
          enum:
          - trialing
          - active
          - past_due
          - completed
          - canceled
          - expired
          - unresolved
        valid:
          type: boolean
          description: Whether or not the membership is valid
        cancel_at_period_end:
          type: boolean
          description: Whether or not this membership is scheduled to cancel at the
            end of the renewal period.
        license_key:
          type: string
          nullable: true
          description: The license key for the membership
        metadata:
          type: object
          description: The metadata for the membership
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to first purchase / generate the
            membership.
        affiliate_username:
          type: string
          nullable: true
          description: The username of the affiliate that referred the customer to
            this membership, if any.
        manage_url:
          type: string
          description: The URL for the customer to manage their membership on whop.com.
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that purchased/owns the membership. (For
            example, they installed an app). Looks like biz_*************
        marketplace:
          type: boolean
          description: Whether or not the membership was purchased through the whop
            marketplace.
      required:
      - id
      - product_id
      - user_id
      - plan_id
      - page_id
      - created_at
      - expires_at
      - renewal_period_start
      - renewal_period_end
      - quantity
      - valid
      - cancel_at_period_end
      - metadata
      - affiliate_username
      - manage_url
    MePayment:
      type: object
      properties:
        id:
          type: string
          description: The ID of the payment, which will look like pay_*************
        membership_id:
          type: string
          nullable: true
          description: The ID of the membership, which will look like mem_*************
        product_id:
          type: string
          nullable: true
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        plan_id:
          type: string
          nullable: true
          description: The ID of the plan, which will look like plan_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        line_item_id:
          type: string
          nullable: true
          description: The line item this receipt was purchased with. This is for
            in-app purchases.
        created_at:
          type: number
          description: The time at which the Payment was created. Measured in seconds
            since the Unix epoch. Does not necessarily reflect the time the Payment
            was successful.
        paid_at:
          type: string
          nullable: true
          description: The time at which the Payment was successful. Measured in seconds
            since the Unix epoch.
        refunded_at:
          type: string
          nullable: true
          description: The time at which the Payment was refunded. Measured in seconds
            since the Unix epoch.
        last_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the last time the Payment was attempted
        next_payment_attempt:
          type: string
          nullable: true
          description: The UTC timestamp of the next time the Payment will be attempted
        status:
          type: string
          description: The status of the payment
          enum:
          - draft
          - open
          - paid
          - pending
          - uncollectible
          - unresolved
          - void
        subtotal:
          type: number
          nullable: true
          description: The amount paid by the User, before any discounts or taxes
        final_amount:
          type: number
          description: The total amount paid by the User, including any discounts
            or taxes
        currency:
          type: string
          description: The three letter currency the Payment was made in
          enum:
          - usd
          - sgd
          - inr
          - aud
          - brl
          - cad
          - dkk
          - eur
          - nok
          - gbp
          - sek
          - chf
          - hkd
          - huf
          - jpy
          - mxn
          - myr
          - pln
          - czk
          - nzd
          - aed
          - eth
          - ape
          - cop
          - ron
          - thb
          - bgn
          - idr
          - dop
          - php
          - try
          - krw
          - twd
          - vnd
          - pkr
          - clp
          - uyu
          - ars
          - zar
          - dzd
          - tnd
          - mad
          - kes
          - kwd
          - jod
          - all
          - xcd
          - amd
          - bsd
          - bhd
          - bob
          - bam
          - khr
          - crc
          - xof
          - egp
          - etb
          - gmd
          - ghs
          - gtq
          - gyd
          - ils
          - jmd
          - mop
          - mga
          - mur
          - mdl
          - mnt
          - nad
          - ngn
          - mkd
          - omr
          - pyg
          - pen
          - qar
          - rwf
          - sar
          - rsd
          - lkr
          - tzs
          - ttd
          - uzs
          - rub
        refunded_amount:
          type: number
          nullable: true
          description: The amount that was refunded to the User (if applicable)
        payments_failed:
          type: number
          nullable: true
          description: The number of times the Payment has failed
        checkout_id:
          type: string
          nullable: true
          description: The ID of the checkout used to execute this payment, if applicable.
        card_brand:
          type: string
          nullable: true
          description: If the payment was made with a credit/debit card, the brand
            of the card.
        card_last_4:
          type: string
          nullable: true
          description: The last 4 digits of the debit/credit card used to make the
            payment, if applicable.
        funding_method:
          type: string
          nullable: true
          description: The funding method of the payment, if applicable.
        wallet_type:
          type: string
          nullable: true
          description: The wallet type of the payment, if applicable.
          enum:
          - apple_pay
          - google_pay
          - paypal
          - venmo
        calculated_statement_descriptor:
          type: string
          nullable: true
          description: The statement descriptor that appears on the customer's bank
            statement for the payment, if applicable.
        issuer_identification_number:
          type: string
          nullable: true
          description: The IIN/BIN of the payment, if applicable.
        billing_usage_ids:
          type: array
          items:
            type: string
            description: The IDs of billing usages connected to this payment, which
              will look like bu_*************
        company_buyer_id:
          type: number
          nullable: true
          description: The ID of the company that made the payment. (For example,
            they installed an app). Looks like biz_*************
        billing_address:
          "$ref": "#/components/schemas/BillingAddress"
        user_email:
          type: string
          description: The email of the user that made the payment
      required:
      - id
      - membership_id
      - product_id
      - user_id
      - plan_id
      - company_id
      - line_item_id
      - created_at
      - status
      - final_amount
      - currency
      - billing_usage_ids
    MeReview:
      type: object
      properties:
        id:
          type: string
          description: The ID of the review, which will look like rev_*************
        company_id:
          type: string
          description: The ID of the company, which will look like biz_*************
        product_id:
          type: string
          description: The ID of the product, which will look like prod_*************
        user_id:
          type: string
          description: The ID of the user, which will look like user_*************
        status:
          type: string
          description: The status of the review
          enum:
          - pending
          - published
          - removed
        stars:
          type: number
          description: The rating of the review. It will be an integer between one
            and five.
        description:
          type: string
          nullable: true
          description: The text response the user left for the review.
        joined_at:
          type: integer
          description: The date the customer first joined the creator's whop.
        created_at:
          type: number
          description: The date the review was created.
      required:
      - id
      - company_id
      - product_id
      - user_id
      - status
      - stars
      - joined_at
      - created_at
    MeSocialAccount:
      type: object
      properties:
        service:
          type: string
          description: The type of social account that it is.
          enum:
          - discord
          - twitter
        username:
          type: string
          nullable: true
          description: The username of the social account
        default:
          type: boolean
          nullable: true
          description: Whether or not this is the default social account for the user's
            account for the provider.
        account_id:
          type: string
          description: The ID of the social account from the provider, like a discord
            ID or twitter ID.
        image_url:
          type: string
          nullable: true
          description: A URL for the image of the social account.
      required:
      - service
      - default
      - account_id
    MeUser:
      type: object
      properties:
        id:
          type: string
          description: The ID of the user, which will look like user_*************
        name:
          type: string
          description: The first and last name of the user.
        username:
          type: string
          description: The username of the user
        email:
          type: string
          nullable: true
          description: The email of the user
        profile_pic_url:
          type: string
          description: The URL of the user's profile picture
      required:
      - id
      - username
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
    Pagination:
      type: object
      properties:
        current_page:
          type: number
          description: Current page number
        total_pages:
          type: number
          description: Total number of pages
        next_page:
          type: number
          nullable: true
          description: Next page number
        prev_page:
          type: number
          nullable: true
          description: Previous page number
        total_count:
          type: number
          description: Total number of records
      additionalProperties: false
      required:
      - current_page
      - total_pages
      - next_page
      - prev_page
      - total_count
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
    InvalidParameters:
      description: Invalid Parameters
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ErrorResponse"
webhooks:
  app-membership-went-valid:
    post:
      operationId: app-membership-went-valid
      security:
      - WebhookSignature: []
      summary: When a membership is purchased and goes valid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - app.membership_went_valid
                  example: app.membership_went_valid
                company:
                  type: string
                  example: biz_123
                data:
                  "$ref": "#/components/schemas/AppMembership"
              required:
              - action
              - data
        required: true
  app-membership-went-invalid:
    post:
      operationId: app-membership-went-invalid
      security:
      - WebhookSignature: []
      summary: When a membership goes invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - app.membership_went_invalid
                  example: app.membership_went_invalid
                company:
                  type: string
                  example: biz_123
                data:
                  "$ref": "#/components/schemas/AppMembership"
              required:
              - action
              - data
        required: true
  app-payment-succeeded:
    post:
      operationId: app-payment-succeeded
      security:
      - WebhookSignature: []
      summary: When a payment is successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - app.payment_succeeded
                  example: app.payment_succeeded
                company:
                  type: string
                  example: biz_123
                data:
                  "$ref": "#/components/schemas/AppPayment"
              required:
              - action
              - data
        required: true
  app-payment-failed:
    post:
      operationId: app-payment-failed
      security:
      - WebhookSignature: []
      summary: When a payment fails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - app.payment_failed
                  example: app.payment_failed
                company:
                  type: string
                  example: biz_123
                data:
                  "$ref": "#/components/schemas/AppPayment"
              required:
              - action
              - data
        required: true
  membership-went-valid:
    post:
      operationId: membership-went-valid
      security:
      - WebhookSignature: []
      summary: When a membership is purchased and goes valid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - membership.went_valid
                  example: membership.went_valid
                data:
                  "$ref": "#/components/schemas/AppMembership"
              required:
              - action
              - data
        required: true
  membership-went-invalid:
    post:
      operationId: membership-went-invalid
      security:
      - WebhookSignature: []
      summary: When a membership goes invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - membership.went_invalid
                  example: membership.went_invalid
                data:
                  "$ref": "#/components/schemas/AppMembership"
              required:
              - action
              - data
        required: true
  payment-succeeded:
    post:
      operationId: payment-succeeded
      security:
      - WebhookSignature: []
      summary: When a payment is successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - payment.succeeded
                  example: payment.succeeded
                data:
                  "$ref": "#/components/schemas/AppPayment"
              required:
              - action
              - data
        required: true
  payment-failed:
    post:
      operationId: payment-failed
      security:
      - WebhookSignature: []
      summary: When a payment fails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum:
                  - payment.failed
                  example: payment.failed
                data:
                  "$ref": "#/components/schemas/AppPayment"
              required:
              - action
              - data
        required: true
