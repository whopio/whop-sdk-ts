name: Auto-update automerge PRs

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  update-automerge-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Update automerge PR branches (trusted authors only)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_WRITE_TOKEN }}
          script: |
            // Authors who can run CI without the "Approve and run" button
            const trustedAssociations = ['OWNER', 'MEMBER', 'COLLABORATOR'];

            const query = `
              query($owner: String!, $name: String!, $cursor: String) {
                repository(owner: $owner, name: $name) {
                  pullRequests(states: OPEN, first: 100, after: $cursor) {
                    pageInfo { hasNextPage endCursor }
                    nodes {
                      id
                      number
                      title
                      isDraft
                      authorAssociation
                      autoMergeRequest { enabledAt }
                    }
                  }
                }
              }`;

            const mutation = `
              mutation($prId: ID!) {
                updatePullRequestBranch(input: { pullRequestId: $prId }) {
                  pullRequest { number }
                }
              }`;

            const owner = context.repo.owner;
            const name = context.repo.repo;

            let cursor = null;
            do {
              const data = await github.graphql(query, { owner, name, cursor });
              const prs = data.repository.pullRequests.nodes;

              for (const pr of prs) {
                if (
                  pr.autoMergeRequest &&
                  !pr.isDraft &&
                  trustedAssociations.includes(pr.authorAssociation)
                ) {
                  console.log(
                    `Updating branch for PR #${pr.number} (${pr.authorAssociation}): ${pr.title}`
                  );
                  // await github.graphql(mutation, { prId: pr.id });
                } else {
                  console.log(
                    `Skipping PR #${pr.number} (${pr.authorAssociation}): ${pr.title}`
                  );
                }
              }

              cursor = data.repository.pullRequests.pageInfo.hasNextPage
                ? data.repository.pullRequests.pageInfo.endCursor
                : null;
            } while (cursor);
