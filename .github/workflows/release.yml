name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_WRITE_TOKEN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@whop' # Scope needed for publishing to npm @whop organization
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9 # Match the version in package.json

      - name: Checkout whop-proto repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WHOP_PROTO_GH_TOKEN }}
          repository: whopio/whop-proto
          sparse-checkout: |
            protos
          path: "protos"

      - name: Install dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Deploy Static Assets to Cloudflare
        if: steps.changesets.outputs.published == 'true' && contains(steps.changesets.outputs.publishedPackages, '@whop/checkout') && !contains(steps.changesets.outputs.publishedPackages, '-canary.')
        run: pnpm turbo deploy
        working-directory: packages/checkout
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deploy Static Assets to Cloudflare (canary)
        if: steps.changesets.outputs.published == 'true' && contains(steps.changesets.outputs.publishedPackages, '@whop/checkout') && contains(steps.changesets.outputs.publishedPackages, '-canary.')
        run: pnpm turbo deploy:canary
        working-directory: packages/checkout
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
