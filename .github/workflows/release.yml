name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org/'
          scope: '@whop' # Scope needed for publishing to npm @whop organization

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9 # Match the version in package.json

      - name: Checkout whop-proto repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.WHOP_PROTO_GH_TOKEN }}
          repository: whopio/whop-proto
          sparse-checkout: |
            protos
          path: "protos"

      - name: Install dependencies
        run: pnpm install

      - name: Detect changed packages with Changesets
        id: changed
        uses: actions/github-script@v7
        with:
          script: |
            const { execSync } = require('child_process');
            const fs = require('fs');

            // 1. Generate a machine-readable report
            execSync('npx changeset status --output=changeset-status.json', {stdio: 'inherit'});

            // 2. Load it and build the Turbo filter string
            const status = JSON.parse(fs.readFileSync('changeset-status.json', 'utf8'));
            const filters = status.releases
              .filter(r => r.type !== 'none')
              .map(r => `--filter=${r.name}`)
              .join(' ');

            core.info(`Detected filters: ${filters || '<none>'}`);

            // 3. Expose as a step output
            core.setOutput('filters', filters);
            core.setOutput('has-changes', status.changesets.length > 0);

      - name: Build release packages
        run: pnpm turbo build ${{ steps.changed.outputs.filters }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        if: steps.changed.outputs.has-changes == 'true'
        uses: changesets/action@v1
        with:
          publish: pnpm turbo release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.WHOP_ORG_NPM_TOKEN }}
